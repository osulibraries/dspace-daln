<?xml version="1.0" encoding="UTF-8"?>

<!--
  template.xsl

-->

<!--
   Special date formatting.  Translate bulldog style dates
   into usable dates.  For WSU collections. 
-->    

<xsl:stylesheet xmlns:i18n="http://apache.org/cocoon/i18n/2.1"
	xmlns:dri="http://di.tamu.edu/DRI/1.0/"
	xmlns:mets="http://www.loc.gov/METS/"
	xmlns:xlink="http://www.w3.org/TR/xlink/"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"
	xmlns:dim="http://www.dspace.org/xmlns/dspace/dim"
	xmlns:xhtml="http://www.w3.org/1999/xhtml"
	xmlns:mods="http://www.loc.gov/mods/v3"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
        xmlns:dcterms="http://purl.org/dc/terms/"
        xmlns="http://www.w3.org/1999/xhtml"
	exclude-result-prefixes="i18n dri mets xlink xsl dim xhtml mods dc dcterms">
    
    <xsl:import href="../WSU/template.xsl"/>
   <!-- <xsl:output indent="yes"/> -->
 

   
    <!-- Generate the info about the item from the metadata section 
     Modified to display creation date and format in user friendly manner
     Expects dates in format YYYY, YYYYMM, or YYYYMMDD.
     Dates that do not begin with a number are passed through unchanged.
     Dates that begin with a number are formatted in user readable style, such as December 17, 1903.
    -->
    <xsl:template match="dim:dim" mode="itemSummaryView-DIM">
        <table class="ds-includeSet-table">

            <tr class="ds-table-row odd">
                <td><span class="bold"><i18n:text>xmlui.dri2xhtml.METS-1.0.item-preview</i18n:text>:</span></td>
                <td>
                    <xsl:choose>
                        <xsl:when test="/mets:METS/mets:fileSec/mets:fileGrp[@USE='THUMBNAIL']">
                        <xsl:variable name="thumbcandidate" select="/mets:METS/mets:fileSec/mets:fileGrp[@USE='CONTENT']
                                            /mets:file[@MIMETYPE='image/jpeg'][last()]" />
                             <a class="image-link" rel="lightbox">
                               <xsl:attribute name="href">
                                  <xsl:value-of select="$thumbcandidate/mets:FLocat[@LOCTYPE='URL']/@xlink:href"/>
                               </xsl:attribute>
                                <img alt="Thumbnail">
                                    <xsl:attribute name="src">
                                        <xsl:value-of select="/mets:METS/mets:fileSec/mets:fileGrp[@USE='THUMBNAIL']
                                             /mets:file[@GROUP_ID=($thumbcandidate/@GROUP_ID)]
                                             /mets:FLocat[@LOCTYPE='URL']/@xlink:href"/>
                                    </xsl:attribute>
                                </img>
                            </a>
                        </xsl:when>
                        <xsl:otherwise>
                            <i18n:text>xmlui.dri2xhtml.METS-1.0.no-preview</i18n:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </td>
            </tr>
            <tr class="ds-table-row even">
                <td><span class="bold"><i18n:text>xmlui.dri2xhtml.METS-1.0.item-title</i18n:text>: </span></td>
                <td>
                    <xsl:choose>
                        <xsl:when test="count(dim:field[@element='title'][not(@qualifier)]) &gt; 1">
                            <xsl:for-each select="dim:field[@element='title'][not(@qualifier)]">
                                <xsl:value-of select="./node()"/>
                                <xsl:if test="count(following-sibling::dim:field[@element='title'][not(@qualifier)]) != 0">
                                            <xsl:text>; </xsl:text><br/>
                                        </xsl:if>
                            </xsl:for-each>
                        </xsl:when>
                         <xsl:when test="count(dim:field[@element='title'][not(@qualifier)]) = 1">
                            <xsl:value-of select="dim:field[@element='title'][not(@qualifier)][1]/node()"/>
                        </xsl:when>
                        <xsl:otherwise>
                            <i18n:text>xmlui.dri2xhtml.METS-1.0.no-title</i18n:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </td>
            </tr>
            <xsl:if test="dim:field[@element='contributor'][@qualifier='author'] or dim:field[@element='creator'] or dim:field[@element='contributor']">
                    <tr class="ds-table-row odd">
                         <!-- if the contributor.artist field is present, label this field as Artist (for Stein Galleries).
                 Otherwise, use the default label (Author)
             -->
             <xsl:choose>
               <xsl:when test="dim:field[@element='contributor'][@qualifier='artist']">
                  <td><span class="bold"><xsl:text>Artist</xsl:text>:</span></td>
               </xsl:when>
              <xsl:otherwise>
                 <td><span class="bold"><i18n:text>xmlui.dri2xhtml.METS-1.0.item-author</i18n:text>:</span></td>
               </xsl:otherwise>
              </xsl:choose>
   <td>
                                        <xsl:choose>
                        <xsl:when test="dim:field[@element='contributor'][@qualifier='artist']">
                            <xsl:for-each select="dim:field[@element='contributor'][@qualifier='artist']">
                                <xsl:copy-of select="."/>
                                <xsl:if test="count(following-sibling::dim:field[@element='contributor'][@qualifier='artist']) != 0">
                                    <xsl:text>; </xsl:text>
                                </xsl:if>
                            </xsl:for-each>
                        </xsl:when>

                        <xsl:when test="dim:field[@element='contributor'][@qualifier='author']">
                            <xsl:for-each select="dim:field[@element='contributor'][@qualifier='author']">
                                <xsl:copy-of select="."/>
                                <xsl:if test="count(following-sibling::dim:field[@element='contributor'][@qualifier='author']) != 0">
                                    <xsl:text>; </xsl:text>
                                </xsl:if>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="dim:field[@element='creator']">
                            <xsl:for-each select="dim:field[@element='creator']">
                                <xsl:copy-of select="."/>
                                <xsl:if test="count(following-sibling::dim:field[@element='creator']) != 0">
                                    <xsl:text>; </xsl:text>
                                </xsl:if>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:when test="dim:field[@element='contributor']">
                            <xsl:for-each select="dim:field[@element='contributor']">
                                <xsl:copy-of select="."/>
                                <xsl:if test="count(following-sibling::dim:field[@element='contributor']) != 0">
                                    <xsl:text>; </xsl:text>
                                </xsl:if>
                            </xsl:for-each>
                        </xsl:when>
                        <xsl:otherwise>
                            <i18n:text>xmlui.dri2xhtml.METS-1.0.no-author</i18n:text>
                        </xsl:otherwise>
                    </xsl:choose>
                </td>
                    </tr>
            </xsl:if>
<xsl:if test="dim:field[@element='description' and @qualifier='abstract']">
                    <tr class="ds-table-row even">
                        <td><span class="bold"><i18n:text>xmlui.dri2xhtml.METS-1.0.item-abstract</i18n:text>:</span></td>
                        <td>
                        <xsl:for-each select="dim:field[@element='description' and @qualifier='abstract']">
                                <xsl:copy-of select="./node()"/>
                        </xsl:for-each>
                        </td>
                    </tr>
            </xsl:if>
   <xsl:if test="dim:field[@element='description' and not(@qualifier)]">
                    <tr class="ds-table-row odd">
                        <td><span class="bold"><i18n:text>xmlui.dri2xhtml.METS-1.0.item-description</i18n:text>:</span></td>
                        <td>
                        <xsl:for-each select="dim:field[@element='description' and not(@qualifier)]">
                                <xsl:copy-of select="./node()"/>
                        </xsl:for-each>
                        </td>
                    </tr>
            </xsl:if>
            <xsl:if test="dim:field[@element='identifier' and @qualifier='uri']">
                    <tr class="ds-table-row even">
                        <td><span class="bold"><i18n:text>xmlui.dri2xhtml.METS-1.0.item-uri</i18n:text>:</span></td>
                        <td>
                                <xsl:for-each select="dim:field[@element='identifier' and @qualifier='uri']">
                                    <a>
                                        <xsl:attribute name="href">
                                            <xsl:copy-of select="./node()"/>
                                        </xsl:attribute>
                                        <xsl:copy-of select="./node()"/>
                                    </a>
                                    <xsl:if test="count(following-sibling::dim:field[@element='identifier' and @qualifier='uri']) != 0">
                                        <br/>
                                    </xsl:if>
                            </xsl:for-each>
                        </td>
                    </tr>
            </xsl:if>
            <xsl:if test="dim:field[@element='date' and @qualifier='created']">
                <tr class="ds-table-row odd">
                        <td><span class="bold"><i18n:text>xmlui.dri2xhtml.METS-1.0.item-date</i18n:text>:</span></td>
                        <td>
                  <xsl:variable name="adate" select="dim:field[@element='date' and @qualifier='created']" />
                  <xsl:variable name="firstdatechar" select="substring($adate, 1,1)" />
                  <xsl:choose>
                  <xsl:when test="translate($firstdatechar,'0123456789','') = ''" >
                  <!-- looks like bulldog formatted date - translate to user readable -->
                    <xsl:variable name="year" select="substring($adate,1,4)" />
                    <xsl:variable name="month" select="substring($adate,5,2)" />
                    <xsl:variable name="day" select="substring($adate,7,2)" />
                    <xsl:choose>
                     <xsl:when test="$month='01'">January</xsl:when>
                     <xsl:when test="$month='02'">February</xsl:when>
                     <xsl:when test="$month='03'">March</xsl:when>
                     <xsl:when test="$month='04'">April</xsl:when>
                     <xsl:when test="$month='05'">May</xsl:when>
                     <xsl:when test="$month='06'">June</xsl:when>
                     <xsl:when test="$month='07'">July</xsl:when>
                     <xsl:when test="$month='08'">August</xsl:when>
                     <xsl:when test="$month='09'">September</xsl:when>
                     <xsl:when test="$month='10'">October</xsl:when>
                     <xsl:when test="$month='11'">November</xsl:when>
                     <xsl:when test="$month='12'">December</xsl:when>
                    </xsl:choose><xsl:text> </xsl:text>
                    <xsl:if test="$day!='00'"><xsl:value-of select="format-number($day,'##')" /><xsl:text>, </xsl:text></xsl:if>
                    <xsl:value-of select="$year" />
                    <xsl:if test="substring($adate,9,1)='-'">
                        <xsl:text> - </xsl:text>
                        <xsl:variable name="year2" select="substring($adate,10,4)" />
                        <xsl:variable name="month2" select="substring($adate,14,2)" />
                        <xsl:variable name="day2" select="substring($adate,16,2)" />
                        <xsl:choose>
                          <xsl:when test="$month2='01'">January</xsl:when>
                          <xsl:when test="$month2='02'">February</xsl:when>
                          <xsl:when test="$month2='03'">March</xsl:when>
                          <xsl:when test="$month2='04'">April</xsl:when>
                          <xsl:when test="$month2='05'">May</xsl:when>
                          <xsl:when test="$month2='06'">June</xsl:when>
                          <xsl:when test="$month2='07'">July</xsl:when>
                          <xsl:when test="$month2='08'">August</xsl:when>
                          <xsl:when test="$month2='09'">September</xsl:when>
                          <xsl:when test="$month2='10'">October</xsl:when>
                          <xsl:when test="$month2='11'">November</xsl:when>
                          <xsl:when test="$month2='12'">December</xsl:when>
                        </xsl:choose><xsl:text> </xsl:text>
                      <xsl:if test="$day2!='00'"><xsl:value-of select="format-number($day2,'##')" /><xsl:text>, </xsl:text></xsl:if>
                      <xsl:value-of select="$year2" />
                    </xsl:if>
                  </xsl:when>
                  <xsl:otherwise> <!-- unknown date format. pass through unformatted -->
                  <xsl:copy-of select="./dim:field[@element='date' and @qualifier='created']/child::node()"/>
                  </xsl:otherwise>
                 </xsl:choose>
                 

                                <xsl:if test="count(following-sibling::dim:field[@element='date' and @qualifier='created']) != 0">
                                <br/>
                                </xsl:if>
                        </td>
                    </tr>
            </xsl:if>
            <xsl:if test="dim:field[@element='contributor' and @qualifier='repository']">
                  <tr class="ds-table-row even">
                    <td><span class="bold">Repository:</span></td>
                    <td><xsl:copy-of select="dim:field[@element='contributor' and @qualifier='repository']/child::node()"/></td>
            </tr>

           </xsl:if>

        </table>
    </xsl:template>
	
</xsl:stylesheet>
